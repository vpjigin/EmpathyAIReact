{"ast":null,"code":"import React,{useState,useRef,useCallback}from'react';import'./AudioRecorder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=_ref=>{let{onRecordingComplete,onPauseRecording,onProcessingComplete,isProcessing,conversationUuid,onStartNewConversation,onEndConversation}=_ref;const[isRecording,setIsRecording]=useState(false);const[recordingTime,setRecordingTime]=useState(0);const[isPaused,setIsPaused]=useState(false);const mediaRecorderRef=useRef(null);const chunksRef=useRef([]);const streamRef=useRef(null);const timerRef=useRef(null);const initializeMediaRecorder=useCallback(async()=>{if(!streamRef.current){streamRef.current=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:true,noiseSuppression:true,autoGainControl:true}});}const mediaRecorder=new MediaRecorder(streamRef.current,{mimeType:'audio/webm;codecs=opus'});mediaRecorderRef.current=mediaRecorder;chunksRef.current=[];mediaRecorder.ondataavailable=event=>{if(event.data.size>0){chunksRef.current.push(event.data);}};mediaRecorder.start();console.log('MediaRecorder started successfully');},[]);const startRecording=useCallback(async()=>{try{console.log('Starting recording...');// Start new conversation if not already started\nif(!conversationUuid){onStartNewConversation();}await initializeMediaRecorder();setIsRecording(true);setRecordingTime(0);timerRef.current=setInterval(()=>{setRecordingTime(prev=>prev+1);},1000);console.log('Recording started successfully');}catch(error){console.error('Error starting recording:',error);alert('Unable to access microphone. Please check your permissions.');}},[initializeMediaRecorder,conversationUuid,onStartNewConversation]);const stopRecording=useCallback(()=>{if(mediaRecorderRef.current&&(isRecording||isPaused)){mediaRecorderRef.current.stop();setIsRecording(false);setIsPaused(false);// Clear timer\nif(timerRef.current){clearInterval(timerRef.current);timerRef.current=null;}// Stop the media stream\nif(streamRef.current){streamRef.current.getTracks().forEach(track=>track.stop());streamRef.current=null;}// End current conversation\nonEndConversation();// Send the final recording if there are chunks\nsetTimeout(()=>{if(chunksRef.current.length>0){const audioBlob=new Blob(chunksRef.current,{type:'audio/webm;codecs=opus'});onRecordingComplete(audioBlob);}chunksRef.current=[];},100);}},[isRecording,isPaused,onRecordingComplete,onEndConversation]);const pauseRecording=useCallback(async()=>{if(mediaRecorderRef.current&&isRecording){// Stop the timer and set paused state\nsetIsPaused(true);setIsRecording(false);if(timerRef.current){clearInterval(timerRef.current);timerRef.current=null;}// Stop current recording and get the audio blob\nmediaRecorderRef.current.stop();// Wait for the recording to stop and get the complete audio blob\nsetTimeout(()=>{if(chunksRef.current.length>0){const audioBlob=new Blob(chunksRef.current,{type:'audio/webm;codecs=opus'});console.log('Sending audio segment with size:',audioBlob.size);onPauseRecording(audioBlob);}else{console.error('No audio data available to send');resumeRecording();}},100);}},[isRecording,onPauseRecording]);const resumeRecording=useCallback(async()=>{if(isPaused&&!isProcessing){try{console.log('Resuming recording...');// Start a new MediaRecorder for the next segment\nawait initializeMediaRecorder();setIsRecording(true);setIsPaused(false);// Resume the timer from where it left off\ntimerRef.current=setInterval(()=>{setRecordingTime(prev=>prev+1);},1000);console.log('Recording resumed successfully');}catch(error){console.error('Error resuming recording:',error);}}},[isPaused,isProcessing,initializeMediaRecorder]);// Auto-resume recording when processing completes\nReact.useEffect(()=>{if(isPaused&&!isProcessing){resumeRecording();onProcessingComplete();}},[isPaused,isProcessing,resumeRecording,onProcessingComplete]);const formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"audio-recorder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recording-status\",children:(isRecording||isPaused)&&/*#__PURE__*/_jsxs(\"div\",{className:\"recording-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:`pulse-dot ${isPaused?'paused':''}`}),/*#__PURE__*/_jsxs(\"span\",{children:[isPaused&&isProcessing?'Processing...':isPaused?'Paused':'Recording...',\" \",formatTime(recordingTime)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"recording-controls\",children:!isRecording&&!isPaused?/*#__PURE__*/_jsxs(\"button\",{className:`record-button start ${isProcessing?'processing':''}`,onClick:startRecording,disabled:isProcessing,children:[isProcessing?/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsxs(\"circle\",{cx:\"12\",cy:\"12\",r:\"2\",children:[/*#__PURE__*/_jsx(\"animate\",{attributeName:\"r\",values:\"2;4;2\",dur:\"1s\",repeatCount:\"indefinite\"}),/*#__PURE__*/_jsx(\"animate\",{attributeName:\"opacity\",values:\"1;0.5;1\",dur:\"1s\",repeatCount:\"indefinite\"})]})}):/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"8\"})}),isProcessing?'Processing...':'Start Recording']}):isPaused?/*#__PURE__*/_jsxs(\"div\",{className:\"recording-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:`record-button resume ${isProcessing?'processing':''}`,onClick:resumeRecording,disabled:isProcessing,children:[/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"polygon\",{points:\"8,5 19,12 8,19\"})}),isProcessing?'Processing...':'Resume']}),/*#__PURE__*/_jsxs(\"button\",{className:\"record-button stop\",onClick:stopRecording,disabled:isProcessing,children:[/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"rect\",{x:\"6\",y:\"6\",width:\"12\",height:\"12\",rx:\"2\"})}),\"Stop Recording\"]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"recording-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"record-button pause\",onClick:pauseRecording,disabled:isProcessing,children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:[/*#__PURE__*/_jsx(\"rect\",{x:\"6\",y:\"4\",width:\"4\",height:\"16\"}),/*#__PURE__*/_jsx(\"rect\",{x:\"14\",y:\"4\",width:\"4\",height:\"16\"})]}),\"Pause & Send\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"record-button stop\",onClick:stopRecording,disabled:isProcessing,children:[/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"rect\",{x:\"6\",y:\"6\",width:\"12\",height:\"12\",rx:\"2\"})}),\"Stop Recording\"]})]})}),/*#__PURE__*/_jsxs(\"p\",{className:\"recording-hint\",children:[!isRecording&&!isProcessing&&\"Press the button and share what's on your mind. Use 'Pause & Send' to send audio to AI.\",isRecording&&!isProcessing&&\"Recording... Click 'Pause & Send' to get AI response or 'Stop' to end recording.\",isProcessing&&\"Processing your message with care...\"]})]});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","useCallback","jsx","_jsx","jsxs","_jsxs","AudioRecorder","_ref","onRecordingComplete","onPauseRecording","onProcessingComplete","isProcessing","conversationUuid","onStartNewConversation","onEndConversation","isRecording","setIsRecording","recordingTime","setRecordingTime","isPaused","setIsPaused","mediaRecorderRef","chunksRef","streamRef","timerRef","initializeMediaRecorder","current","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","mediaRecorder","MediaRecorder","mimeType","ondataavailable","event","data","size","push","start","console","log","startRecording","setInterval","prev","error","alert","stopRecording","stop","clearInterval","getTracks","forEach","track","setTimeout","length","audioBlob","Blob","type","pauseRecording","resumeRecording","useEffect","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","onClick","disabled","width","height","viewBox","fill","cx","cy","r","attributeName","values","dur","repeatCount","points","x","y","rx"],"sources":["/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport './AudioRecorder.css';\n\ninterface AudioRecorderProps {\n  onRecordingComplete: (audioBlob: Blob) => void;\n  onPauseRecording: (audioBlob: Blob) => void;\n  onProcessingComplete: () => void;\n  isProcessing: boolean;\n  conversationUuid: string | null;\n  onStartNewConversation: () => string;\n  onEndConversation: () => void;\n}\n\nconst AudioRecorder: React.FC<AudioRecorderProps> = ({ onRecordingComplete, onPauseRecording, onProcessingComplete, isProcessing, conversationUuid, onStartNewConversation, onEndConversation }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const chunksRef = useRef<Blob[]>([]);\n  const streamRef = useRef<MediaStream | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const initializeMediaRecorder = useCallback(async () => {\n    if (!streamRef.current) {\n      streamRef.current = await navigator.mediaDevices.getUserMedia({ \n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        }\n      });\n    }\n\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'audio/webm;codecs=opus'\n    });\n    \n    mediaRecorderRef.current = mediaRecorder;\n    chunksRef.current = [];\n    \n    mediaRecorder.ondataavailable = (event) => {\n      if (event.data.size > 0) {\n        chunksRef.current.push(event.data);\n      }\n    };\n    \n    mediaRecorder.start();\n    console.log('MediaRecorder started successfully');\n  }, []);\n\n  const startRecording = useCallback(async () => {\n    try {\n      console.log('Starting recording...');\n      \n      // Start new conversation if not already started\n      if (!conversationUuid) {\n        onStartNewConversation();\n      }\n      \n      await initializeMediaRecorder();\n      setIsRecording(true);\n      setRecordingTime(0);\n      \n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      \n      console.log('Recording started successfully');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      alert('Unable to access microphone. Please check your permissions.');\n    }\n  }, [initializeMediaRecorder, conversationUuid, onStartNewConversation]);\n\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && (isRecording || isPaused)) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      setIsPaused(false);\n      \n      // Clear timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      \n      // Stop the media stream\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      \n      // End current conversation\n      onEndConversation();\n      \n      // Send the final recording if there are chunks\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const audioBlob = new Blob(chunksRef.current, { type: 'audio/webm;codecs=opus' });\n          onRecordingComplete(audioBlob);\n        }\n        chunksRef.current = [];\n      }, 100);\n    }\n  }, [isRecording, isPaused, onRecordingComplete, onEndConversation]);\n\n  const pauseRecording = useCallback(async () => {\n    if (mediaRecorderRef.current && isRecording) {\n      // Stop the timer and set paused state\n      setIsPaused(true);\n      setIsRecording(false);\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      \n      // Stop current recording and get the audio blob\n      mediaRecorderRef.current.stop();\n      \n      // Wait for the recording to stop and get the complete audio blob\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const audioBlob = new Blob(chunksRef.current, { type: 'audio/webm;codecs=opus' });\n          console.log('Sending audio segment with size:', audioBlob.size);\n          onPauseRecording(audioBlob);\n        } else {\n          console.error('No audio data available to send');\n          resumeRecording();\n        }\n      }, 100);\n    }\n  }, [isRecording, onPauseRecording]);\n\n  const resumeRecording = useCallback(async () => {\n    if (isPaused && !isProcessing) {\n      try {\n        console.log('Resuming recording...');\n        // Start a new MediaRecorder for the next segment\n        await initializeMediaRecorder();\n        setIsRecording(true);\n        setIsPaused(false);\n        \n        // Resume the timer from where it left off\n        timerRef.current = setInterval(() => {\n          setRecordingTime(prev => prev + 1);\n        }, 1000);\n        \n        console.log('Recording resumed successfully');\n      } catch (error) {\n        console.error('Error resuming recording:', error);\n      }\n    }\n  }, [isPaused, isProcessing, initializeMediaRecorder]);\n\n  // Auto-resume recording when processing completes\n  React.useEffect(() => {\n    if (isPaused && !isProcessing) {\n      resumeRecording();\n      onProcessingComplete();\n    }\n  }, [isPaused, isProcessing, resumeRecording, onProcessingComplete]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <div className=\"recording-status\">\n        {(isRecording || isPaused) && (\n          <div className=\"recording-indicator\">\n            <div className={`pulse-dot ${isPaused ? 'paused' : ''}`}></div>\n            <span>\n              {isPaused && isProcessing ? 'Processing...' : \n               isPaused ? 'Paused' : \n               'Recording...'} {formatTime(recordingTime)}\n            </span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"recording-controls\">\n        {!isRecording && !isPaused ? (\n          <button \n            className={`record-button start ${isProcessing ? 'processing' : ''}`}\n            onClick={startRecording}\n            disabled={isProcessing}\n          >\n            {isProcessing ? (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"2\">\n                  <animate attributeName=\"r\" values=\"2;4;2\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                  <animate attributeName=\"opacity\" values=\"1;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </circle>\n              </svg>\n            ) : (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"8\"/>\n              </svg>\n            )}\n            {isProcessing ? 'Processing...' : 'Start Recording'}\n          </button>\n        ) : isPaused ? (\n          <div className=\"recording-buttons\">\n            <button \n              className={`record-button resume ${isProcessing ? 'processing' : ''}`}\n              onClick={resumeRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <polygon points=\"8,5 19,12 8,19\"/>\n              </svg>\n              {isProcessing ? 'Processing...' : 'Resume'}\n            </button>\n            <button \n              className=\"record-button stop\"\n              onClick={stopRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n              </svg>\n              Stop Recording\n            </button>\n          </div>\n        ) : (\n          <div className=\"recording-buttons\">\n            <button \n              className=\"record-button pause\"\n              onClick={pauseRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"/>\n                <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"/>\n              </svg>\n              Pause & Send\n            </button>\n            <button \n              className=\"record-button stop\"\n              onClick={stopRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n              </svg>\n              Stop Recording\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <p className=\"recording-hint\">\n        {!isRecording && !isProcessing && \"Press the button and share what's on your mind. Use 'Pause & Send' to send audio to AI.\"}\n        {isRecording && !isProcessing && \"Recording... Click 'Pause & Send' to get AI response or 'Stop' to end recording.\"}\n        {isProcessing && \"Processing your message with care...\"}\n      </p>\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}