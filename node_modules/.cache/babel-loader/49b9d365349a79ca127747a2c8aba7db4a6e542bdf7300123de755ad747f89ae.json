{"ast":null,"code":"var _jsxFileName = \"/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport './AudioRecorder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onRecordingComplete,\n  onPauseRecording,\n  isProcessing\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const timerRef = useRef(null);\n  const startRecording = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm;codecs=opus'\n      });\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(chunksRef.current, {\n          type: 'audio/webm;codecs=opus'\n        });\n        onRecordingComplete(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      alert('Unable to access microphone. Please check your permissions.');\n    }\n  }, [onRecordingComplete]);\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n\n      // Clear timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    }\n  }, [isRecording]);\n  const pauseRecording = useCallback(() => {\n    if (mediaRecorderRef.current && isRecording) {\n      // Force MediaRecorder to capture current data\n      mediaRecorderRef.current.requestData();\n\n      // Wait a brief moment for data to be captured, then create blob\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const currentBlob = new Blob([...chunksRef.current], {\n            type: 'audio/webm;codecs=opus'\n          });\n          console.log('Sending audio blob with size:', currentBlob.size);\n          onPauseRecording(currentBlob);\n        } else {\n          console.error('No audio data available to send');\n          // Optionally show user message that recording is too short\n        }\n      }, 100);\n    }\n  }, [isRecording, onPauseRecording]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-status\",\n      children: isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Recording... \", formatTime(recordingTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-controls\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `record-button start ${isProcessing ? 'processing' : ''}`,\n        onClick: startRecording,\n        disabled: isProcessing,\n        children: [isProcessing ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"animate\", {\n              attributeName: \"r\",\n              values: \"2;4;2\",\n              dur: \"1s\",\n              repeatCount: \"indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"animate\", {\n              attributeName: \"opacity\",\n              values: \"1;0.5;1\",\n              dur: \"1s\",\n              repeatCount: \"indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), isProcessing ? 'Processing...' : 'Start Recording']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button pause\",\n          onClick: pauseRecording,\n          disabled: isProcessing,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"6\",\n              y: \"4\",\n              width: \"4\",\n              height: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"14\",\n              y: \"4\",\n              width: \"4\",\n              height: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), \"Pause & Send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button stop\",\n          onClick: stopRecording,\n          disabled: isProcessing,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"6\",\n              y: \"6\",\n              width: \"12\",\n              height: \"12\",\n              rx: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), \"Stop Recording\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"recording-hint\",\n      children: [!isRecording && !isProcessing && \"Press the button and share what's on your mind. Use 'Pause & Send' to send audio to AI.\", isRecording && !isProcessing && \"Recording... Click 'Pause & Send' to get AI response or 'Stop' to end recording.\", isProcessing && \"Processing your message with care...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"O5MLZSj8F55dDzKRGYc6QSMdtSg=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useCallback","jsxDEV","_jsxDEV","AudioRecorder","onRecordingComplete","onPauseRecording","isProcessing","_s","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","chunksRef","timerRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","mediaRecorder","MediaRecorder","mimeType","current","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","getTracks","forEach","track","stop","start","setInterval","prev","error","console","alert","stopRecording","clearInterval","pauseRecording","requestData","setTimeout","length","currentBlob","log","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","width","height","viewBox","fill","cx","cy","r","attributeName","values","dur","repeatCount","x","y","rx","_c","$RefreshReg$"],"sources":["/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport './AudioRecorder.css';\n\ninterface AudioRecorderProps {\n  onRecordingComplete: (audioBlob: Blob) => void;\n  onPauseRecording: (audioBlob: Blob) => void;\n  isProcessing: boolean;\n}\n\nconst AudioRecorder: React.FC<AudioRecorderProps> = ({ onRecordingComplete, onPauseRecording, isProcessing }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const chunksRef = useRef<Blob[]>([]);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const startRecording = useCallback(async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        }\n      });\n      \n      \n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm;codecs=opus'\n      });\n      \n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      \n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      \n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(chunksRef.current, { type: 'audio/webm;codecs=opus' });\n        onRecordingComplete(audioBlob);\n        stream.getTracks().forEach(track => track.stop());\n        \n      };\n      \n      mediaRecorder.start();\n      setIsRecording(true);\n      setRecordingTime(0);\n      \n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      \n      \n    } catch (error) {\n      console.error('Error starting recording:', error);\n      alert('Unable to access microphone. Please check your permissions.');\n    }\n  }, [onRecordingComplete]);\n\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      \n      // Clear timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n    }\n  }, [isRecording]);\n\n  const pauseRecording = useCallback(() => {\n    if (mediaRecorderRef.current && isRecording) {\n      // Force MediaRecorder to capture current data\n      mediaRecorderRef.current.requestData();\n      \n      // Wait a brief moment for data to be captured, then create blob\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const currentBlob = new Blob([...chunksRef.current], { type: 'audio/webm;codecs=opus' });\n          console.log('Sending audio blob with size:', currentBlob.size);\n          onPauseRecording(currentBlob);\n        } else {\n          console.error('No audio data available to send');\n          // Optionally show user message that recording is too short\n        }\n      }, 100);\n    }\n  }, [isRecording, onPauseRecording]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <div className=\"recording-status\">\n        {isRecording && (\n          <div className=\"recording-indicator\">\n            <div className=\"pulse-dot\"></div>\n            <span>Recording... {formatTime(recordingTime)}</span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"recording-controls\">\n        {!isRecording ? (\n          <button \n            className={`record-button start ${isProcessing ? 'processing' : ''}`}\n            onClick={startRecording}\n            disabled={isProcessing}\n          >\n            {isProcessing ? (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"2\">\n                  <animate attributeName=\"r\" values=\"2;4;2\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                  <animate attributeName=\"opacity\" values=\"1;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </circle>\n              </svg>\n            ) : (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"8\"/>\n              </svg>\n            )}\n            {isProcessing ? 'Processing...' : 'Start Recording'}\n          </button>\n        ) : (\n          <div className=\"recording-buttons\">\n            <button \n              className=\"record-button pause\"\n              onClick={pauseRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"/>\n                <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"/>\n              </svg>\n              Pause & Send\n            </button>\n            <button \n              className=\"record-button stop\"\n              onClick={stopRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n              </svg>\n              Stop Recording\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <p className=\"recording-hint\">\n        {!isRecording && !isProcessing && \"Press the button and share what's on your mind. Use 'Pause & Send' to send audio to AI.\"}\n        {isRecording && !isProcessing && \"Recording... Click 'Pause & Send' to get AI response or 'Stop' to end recording.\"}\n        {isProcessing && \"Processing your message with care...\"}\n      </p>\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}