{"ast":null,"code":"var _jsxFileName = \"/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport './AudioRecorder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onRecordingComplete,\n  onPauseRecording,\n  onProcessingComplete,\n  isProcessing\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const mediaRecorderRef = useRef(null);\n  const chunksRef = useRef([]);\n  const streamRef = useRef(null);\n  const timerRef = useRef(null);\n  const initializeMediaRecorder = useCallback(async () => {\n    if (!streamRef.current) {\n      streamRef.current = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true\n        }\n      });\n    }\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'audio/webm;codecs=opus'\n    });\n    mediaRecorderRef.current = mediaRecorder;\n    chunksRef.current = [];\n    return new Promise(resolve => {\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        resolve();\n      };\n      mediaRecorder.start();\n    });\n  }, []);\n  const startRecording = useCallback(async () => {\n    try {\n      await initializeMediaRecorder();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      alert('Unable to access microphone. Please check your permissions.');\n    }\n  }, [initializeMediaRecorder]);\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && (isRecording || isPaused)) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      setIsPaused(false);\n\n      // Clear timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n\n      // Stop the media stream\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n\n      // Send the final recording if there are chunks\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const audioBlob = new Blob(chunksRef.current, {\n            type: 'audio/webm;codecs=opus'\n          });\n          onRecordingComplete(audioBlob);\n        }\n        chunksRef.current = [];\n      }, 100);\n    }\n  }, [isRecording, isPaused, onRecordingComplete]);\n  const pauseRecording = useCallback(async () => {\n    if (mediaRecorderRef.current && isRecording) {\n      // Stop the timer and set paused state\n      setIsPaused(true);\n      setIsRecording(false);\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n\n      // Stop current recording and get the audio blob\n      mediaRecorderRef.current.stop();\n\n      // Wait for the recording to stop and get the complete audio blob\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const audioBlob = new Blob(chunksRef.current, {\n            type: 'audio/webm;codecs=opus'\n          });\n          console.log('Sending audio segment with size:', audioBlob.size);\n          onPauseRecording(audioBlob);\n        } else {\n          console.error('No audio data available to send');\n          resumeRecording();\n        }\n      }, 100);\n    }\n  }, [isRecording, onPauseRecording]);\n  const resumeRecording = useCallback(async () => {\n    if (isPaused && !isProcessing && streamRef.current) {\n      try {\n        // Start a new MediaRecorder for the next segment\n        await initializeMediaRecorder();\n        setIsRecording(true);\n        setIsPaused(false);\n\n        // Resume the timer from where it left off\n        timerRef.current = setInterval(() => {\n          setRecordingTime(prev => prev + 1);\n        }, 1000);\n      } catch (error) {\n        console.error('Error resuming recording:', error);\n      }\n    }\n  }, [isPaused, isProcessing, initializeMediaRecorder]);\n\n  // Auto-resume recording when processing completes\n  React.useEffect(() => {\n    if (isPaused && !isProcessing) {\n      resumeRecording();\n      onProcessingComplete();\n    }\n  }, [isPaused, isProcessing, resumeRecording, onProcessingComplete]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-status\",\n      children: (isRecording || isPaused) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `pulse-dot ${isPaused ? 'paused' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [isPaused && isProcessing ? 'Processing...' : isPaused ? 'Paused' : 'Recording...', \" \", formatTime(recordingTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-controls\",\n      children: !isRecording && !isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `record-button start ${isProcessing ? 'processing' : ''}`,\n        onClick: startRecording,\n        disabled: isProcessing,\n        children: [isProcessing ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"animate\", {\n              attributeName: \"r\",\n              values: \"2;4;2\",\n              dur: \"1s\",\n              repeatCount: \"indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"animate\", {\n              attributeName: \"opacity\",\n              values: \"1;0.5;1\",\n              dur: \"1s\",\n              repeatCount: \"indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this), isProcessing ? 'Processing...' : 'Start Recording']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : isPaused ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `record-button resume ${isProcessing ? 'processing' : ''}`,\n          onClick: resumeRecording,\n          disabled: isProcessing,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n              points: \"8,5 19,12 8,19\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), isProcessing ? 'Processing...' : 'Resume']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button stop\",\n          onClick: stopRecording,\n          disabled: isProcessing,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"6\",\n              y: \"6\",\n              width: \"12\",\n              height: \"12\",\n              rx: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), \"Stop Recording\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button pause\",\n          onClick: pauseRecording,\n          disabled: isProcessing,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"6\",\n              y: \"4\",\n              width: \"4\",\n              height: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"14\",\n              y: \"4\",\n              width: \"4\",\n              height: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), \"Pause & Send\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"record-button stop\",\n          onClick: stopRecording,\n          disabled: isProcessing,\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"rect\", {\n              x: \"6\",\n              y: \"6\",\n              width: \"12\",\n              height: \"12\",\n              rx: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), \"Stop Recording\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"recording-hint\",\n      children: [!isRecording && !isProcessing && \"Press the button and share what's on your mind. Use 'Pause & Send' to send audio to AI.\", isRecording && !isProcessing && \"Recording... Click 'Pause & Send' to get AI response or 'Stop' to end recording.\", isProcessing && \"Processing your message with care...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"y+rTHCgIolb/07brao+wLDalbaY=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useCallback","jsxDEV","_jsxDEV","AudioRecorder","onRecordingComplete","onPauseRecording","onProcessingComplete","isProcessing","_s","isRecording","setIsRecording","recordingTime","setRecordingTime","isPaused","setIsPaused","mediaRecorderRef","chunksRef","streamRef","timerRef","initializeMediaRecorder","current","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","mediaRecorder","MediaRecorder","mimeType","Promise","resolve","ondataavailable","event","data","size","push","onstop","start","startRecording","setInterval","prev","error","console","alert","stopRecording","stop","clearInterval","getTracks","forEach","track","setTimeout","length","audioBlob","Blob","type","pauseRecording","log","resumeRecording","useEffect","formatTime","seconds","mins","Math","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","width","height","viewBox","fill","cx","cy","r","attributeName","values","dur","repeatCount","points","x","y","rx","_c","$RefreshReg$"],"sources":["/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport './AudioRecorder.css';\n\ninterface AudioRecorderProps {\n  onRecordingComplete: (audioBlob: Blob) => void;\n  onPauseRecording: (audioBlob: Blob) => void;\n  onProcessingComplete: () => void;\n  isProcessing: boolean;\n}\n\nconst AudioRecorder: React.FC<AudioRecorderProps> = ({ onRecordingComplete, onPauseRecording, onProcessingComplete, isProcessing }) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const chunksRef = useRef<Blob[]>([]);\n  const streamRef = useRef<MediaStream | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  const initializeMediaRecorder = useCallback(async () => {\n    if (!streamRef.current) {\n      streamRef.current = await navigator.mediaDevices.getUserMedia({ \n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n        }\n      });\n    }\n\n    const mediaRecorder = new MediaRecorder(streamRef.current, {\n      mimeType: 'audio/webm;codecs=opus'\n    });\n    \n    mediaRecorderRef.current = mediaRecorder;\n    chunksRef.current = [];\n    \n    return new Promise<void>((resolve) => {\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunksRef.current.push(event.data);\n        }\n      };\n      \n      mediaRecorder.onstop = () => {\n        resolve();\n      };\n      \n      mediaRecorder.start();\n    });\n  }, []);\n\n  const startRecording = useCallback(async () => {\n    try {\n      await initializeMediaRecorder();\n      setIsRecording(true);\n      setRecordingTime(0);\n      \n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      \n    } catch (error) {\n      console.error('Error starting recording:', error);\n      alert('Unable to access microphone. Please check your permissions.');\n    }\n  }, [initializeMediaRecorder]);\n\n  const stopRecording = useCallback(() => {\n    if (mediaRecorderRef.current && (isRecording || isPaused)) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      setIsPaused(false);\n      \n      // Clear timer\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      \n      // Stop the media stream\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n        streamRef.current = null;\n      }\n      \n      // Send the final recording if there are chunks\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const audioBlob = new Blob(chunksRef.current, { type: 'audio/webm;codecs=opus' });\n          onRecordingComplete(audioBlob);\n        }\n        chunksRef.current = [];\n      }, 100);\n    }\n  }, [isRecording, isPaused, onRecordingComplete]);\n\n  const pauseRecording = useCallback(async () => {\n    if (mediaRecorderRef.current && isRecording) {\n      // Stop the timer and set paused state\n      setIsPaused(true);\n      setIsRecording(false);\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n        timerRef.current = null;\n      }\n      \n      // Stop current recording and get the audio blob\n      mediaRecorderRef.current.stop();\n      \n      // Wait for the recording to stop and get the complete audio blob\n      setTimeout(() => {\n        if (chunksRef.current.length > 0) {\n          const audioBlob = new Blob(chunksRef.current, { type: 'audio/webm;codecs=opus' });\n          console.log('Sending audio segment with size:', audioBlob.size);\n          onPauseRecording(audioBlob);\n        } else {\n          console.error('No audio data available to send');\n          resumeRecording();\n        }\n      }, 100);\n    }\n  }, [isRecording, onPauseRecording]);\n\n  const resumeRecording = useCallback(async () => {\n    if (isPaused && !isProcessing && streamRef.current) {\n      try {\n        // Start a new MediaRecorder for the next segment\n        await initializeMediaRecorder();\n        setIsRecording(true);\n        setIsPaused(false);\n        \n        // Resume the timer from where it left off\n        timerRef.current = setInterval(() => {\n          setRecordingTime(prev => prev + 1);\n        }, 1000);\n      } catch (error) {\n        console.error('Error resuming recording:', error);\n      }\n    }\n  }, [isPaused, isProcessing, initializeMediaRecorder]);\n\n  // Auto-resume recording when processing completes\n  React.useEffect(() => {\n    if (isPaused && !isProcessing) {\n      resumeRecording();\n      onProcessingComplete();\n    }\n  }, [isPaused, isProcessing, resumeRecording, onProcessingComplete]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <div className=\"recording-status\">\n        {(isRecording || isPaused) && (\n          <div className=\"recording-indicator\">\n            <div className={`pulse-dot ${isPaused ? 'paused' : ''}`}></div>\n            <span>\n              {isPaused && isProcessing ? 'Processing...' : \n               isPaused ? 'Paused' : \n               'Recording...'} {formatTime(recordingTime)}\n            </span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"recording-controls\">\n        {!isRecording && !isPaused ? (\n          <button \n            className={`record-button start ${isProcessing ? 'processing' : ''}`}\n            onClick={startRecording}\n            disabled={isProcessing}\n          >\n            {isProcessing ? (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"2\">\n                  <animate attributeName=\"r\" values=\"2;4;2\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                  <animate attributeName=\"opacity\" values=\"1;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </circle>\n              </svg>\n            ) : (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"8\"/>\n              </svg>\n            )}\n            {isProcessing ? 'Processing...' : 'Start Recording'}\n          </button>\n        ) : isPaused ? (\n          <div className=\"recording-buttons\">\n            <button \n              className={`record-button resume ${isProcessing ? 'processing' : ''}`}\n              onClick={resumeRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <polygon points=\"8,5 19,12 8,19\"/>\n              </svg>\n              {isProcessing ? 'Processing...' : 'Resume'}\n            </button>\n            <button \n              className=\"record-button stop\"\n              onClick={stopRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n              </svg>\n              Stop Recording\n            </button>\n          </div>\n        ) : (\n          <div className=\"recording-buttons\">\n            <button \n              className=\"record-button pause\"\n              onClick={pauseRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"4\" width=\"4\" height=\"16\"/>\n                <rect x=\"14\" y=\"4\" width=\"4\" height=\"16\"/>\n              </svg>\n              Pause & Send\n            </button>\n            <button \n              className=\"record-button stop\"\n              onClick={stopRecording}\n              disabled={isProcessing}\n            >\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n              </svg>\n              Stop Recording\n            </button>\n          </div>\n        )}\n      </div>\n      \n      <p className=\"recording-hint\">\n        {!isRecording && !isProcessing && \"Press the button and share what's on your mind. Use 'Pause & Send' to send audio to AI.\"}\n        {isRecording && !isProcessing && \"Recording... Click 'Pause & Send' to get AI response or 'Stop' to end recording.\"}\n        {isProcessing && \"Processing your message with care...\"}\n      </p>\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAC5D,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS7B,MAAMC,aAA2C,GAAGA,CAAC;EAAEC,mBAAmB;EAAEC,gBAAgB;EAAEC,oBAAoB;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrI,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMiB,gBAAgB,GAAGhB,MAAM,CAAuB,IAAI,CAAC;EAC3D,MAAMiB,SAAS,GAAGjB,MAAM,CAAS,EAAE,CAAC;EACpC,MAAMkB,SAAS,GAAGlB,MAAM,CAAqB,IAAI,CAAC;EAClD,MAAMmB,QAAQ,GAAGnB,MAAM,CAAwB,IAAI,CAAC;EAEpD,MAAMoB,uBAAuB,GAAGnB,WAAW,CAAC,YAAY;IACtD,IAAI,CAACiB,SAAS,CAACG,OAAO,EAAE;MACtBH,SAAS,CAACG,OAAO,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAC5DC,KAAK,EAAE;UACLC,gBAAgB,EAAE,IAAI;UACtBC,gBAAgB,EAAE,IAAI;UACtBC,eAAe,EAAE;QACnB;MACF,CAAC,CAAC;IACJ;IAEA,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACZ,SAAS,CAACG,OAAO,EAAE;MACzDU,QAAQ,EAAE;IACZ,CAAC,CAAC;IAEFf,gBAAgB,CAACK,OAAO,GAAGQ,aAAa;IACxCZ,SAAS,CAACI,OAAO,GAAG,EAAE;IAEtB,OAAO,IAAIW,OAAO,CAAQC,OAAO,IAAK;MACpCJ,aAAa,CAACK,eAAe,GAAIC,KAAK,IAAK;QACzC,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;UACvBpB,SAAS,CAACI,OAAO,CAACiB,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;QACpC;MACF,CAAC;MAEDP,aAAa,CAACU,MAAM,GAAG,MAAM;QAC3BN,OAAO,CAAC,CAAC;MACX,CAAC;MAEDJ,aAAa,CAACW,KAAK,CAAC,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGxC,WAAW,CAAC,YAAY;IAC7C,IAAI;MACF,MAAMmB,uBAAuB,CAAC,CAAC;MAC/BT,cAAc,CAAC,IAAI,CAAC;MACpBE,gBAAgB,CAAC,CAAC,CAAC;MAEnBM,QAAQ,CAACE,OAAO,GAAGqB,WAAW,CAAC,MAAM;QACnC7B,gBAAgB,CAAC8B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACpC,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,KAAK,CAAC,6DAA6D,CAAC;IACtE;EACF,CAAC,EAAE,CAAC1B,uBAAuB,CAAC,CAAC;EAE7B,MAAM2B,aAAa,GAAG9C,WAAW,CAAC,MAAM;IACtC,IAAIe,gBAAgB,CAACK,OAAO,KAAKX,WAAW,IAAII,QAAQ,CAAC,EAAE;MACzDE,gBAAgB,CAACK,OAAO,CAAC2B,IAAI,CAAC,CAAC;MAC/BrC,cAAc,CAAC,KAAK,CAAC;MACrBI,WAAW,CAAC,KAAK,CAAC;;MAElB;MACA,IAAII,QAAQ,CAACE,OAAO,EAAE;QACpB4B,aAAa,CAAC9B,QAAQ,CAACE,OAAO,CAAC;QAC/BF,QAAQ,CAACE,OAAO,GAAG,IAAI;MACzB;;MAEA;MACA,IAAIH,SAAS,CAACG,OAAO,EAAE;QACrBH,SAAS,CAACG,OAAO,CAAC6B,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC;QAC5D9B,SAAS,CAACG,OAAO,GAAG,IAAI;MAC1B;;MAEA;MACAgC,UAAU,CAAC,MAAM;QACf,IAAIpC,SAAS,CAACI,OAAO,CAACiC,MAAM,GAAG,CAAC,EAAE;UAChC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACvC,SAAS,CAACI,OAAO,EAAE;YAAEoC,IAAI,EAAE;UAAyB,CAAC,CAAC;UACjFpD,mBAAmB,CAACkD,SAAS,CAAC;QAChC;QACAtC,SAAS,CAACI,OAAO,GAAG,EAAE;MACxB,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAACX,WAAW,EAAEI,QAAQ,EAAET,mBAAmB,CAAC,CAAC;EAEhD,MAAMqD,cAAc,GAAGzD,WAAW,CAAC,YAAY;IAC7C,IAAIe,gBAAgB,CAACK,OAAO,IAAIX,WAAW,EAAE;MAC3C;MACAK,WAAW,CAAC,IAAI,CAAC;MACjBJ,cAAc,CAAC,KAAK,CAAC;MACrB,IAAIQ,QAAQ,CAACE,OAAO,EAAE;QACpB4B,aAAa,CAAC9B,QAAQ,CAACE,OAAO,CAAC;QAC/BF,QAAQ,CAACE,OAAO,GAAG,IAAI;MACzB;;MAEA;MACAL,gBAAgB,CAACK,OAAO,CAAC2B,IAAI,CAAC,CAAC;;MAE/B;MACAK,UAAU,CAAC,MAAM;QACf,IAAIpC,SAAS,CAACI,OAAO,CAACiC,MAAM,GAAG,CAAC,EAAE;UAChC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACvC,SAAS,CAACI,OAAO,EAAE;YAAEoC,IAAI,EAAE;UAAyB,CAAC,CAAC;UACjFZ,OAAO,CAACc,GAAG,CAAC,kCAAkC,EAAEJ,SAAS,CAAClB,IAAI,CAAC;UAC/D/B,gBAAgB,CAACiD,SAAS,CAAC;QAC7B,CAAC,MAAM;UACLV,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAC;UAChDgB,eAAe,CAAC,CAAC;QACnB;MACF,CAAC,EAAE,GAAG,CAAC;IACT;EACF,CAAC,EAAE,CAAClD,WAAW,EAAEJ,gBAAgB,CAAC,CAAC;EAEnC,MAAMsD,eAAe,GAAG3D,WAAW,CAAC,YAAY;IAC9C,IAAIa,QAAQ,IAAI,CAACN,YAAY,IAAIU,SAAS,CAACG,OAAO,EAAE;MAClD,IAAI;QACF;QACA,MAAMD,uBAAuB,CAAC,CAAC;QAC/BT,cAAc,CAAC,IAAI,CAAC;QACpBI,WAAW,CAAC,KAAK,CAAC;;QAElB;QACAI,QAAQ,CAACE,OAAO,GAAGqB,WAAW,CAAC,MAAM;UACnC7B,gBAAgB,CAAC8B,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QACpC,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF,CAAC,EAAE,CAAC9B,QAAQ,EAAEN,YAAY,EAAEY,uBAAuB,CAAC,CAAC;;EAErD;EACAtB,KAAK,CAAC+D,SAAS,CAAC,MAAM;IACpB,IAAI/C,QAAQ,IAAI,CAACN,YAAY,EAAE;MAC7BoD,eAAe,CAAC,CAAC;MACjBrD,oBAAoB,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACO,QAAQ,EAAEN,YAAY,EAAEoD,eAAe,EAAErD,oBAAoB,CAAC,CAAC;EAEnE,MAAMuD,UAAU,GAAIC,OAAe,IAAK;IACtC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACrC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAClF,CAAC;EAED,oBACElE,OAAA;IAAKmE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BpE,OAAA;MAAKmE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9B,CAAC7D,WAAW,IAAII,QAAQ,kBACvBX,OAAA;QAAKmE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAClCpE,OAAA;UAAKmE,SAAS,EAAE,aAAaxD,QAAQ,GAAG,QAAQ,GAAG,EAAE;QAAG;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/DxE,OAAA;UAAAoE,QAAA,GACGzD,QAAQ,IAAIN,YAAY,GAAG,eAAe,GAC1CM,QAAQ,GAAG,QAAQ,GACnB,cAAc,EAAC,GAAC,EAACgD,UAAU,CAAClD,aAAa,CAAC;QAAA;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxE,OAAA;MAAKmE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAChC,CAAC7D,WAAW,IAAI,CAACI,QAAQ,gBACxBX,OAAA;QACEmE,SAAS,EAAE,uBAAuB9D,YAAY,GAAG,YAAY,GAAG,EAAE,EAAG;QACrEoE,OAAO,EAAEnC,cAAe;QACxBoC,QAAQ,EAAErE,YAAa;QAAA+D,QAAA,GAEtB/D,YAAY,gBACXL,OAAA;UAAK2E,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,cAAc;UAAAV,QAAA,eACjEpE,OAAA;YAAQ+E,EAAE,EAAC,IAAI;YAACC,EAAE,EAAC,IAAI;YAACC,CAAC,EAAC,GAAG;YAAAb,QAAA,gBAC3BpE,OAAA;cAASkF,aAAa,EAAC,GAAG;cAACC,MAAM,EAAC,OAAO;cAACC,GAAG,EAAC,IAAI;cAACC,WAAW,EAAC;YAAY;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eAC7ExE,OAAA;cAASkF,aAAa,EAAC,SAAS;cAACC,MAAM,EAAC,SAAS;cAACC,GAAG,EAAC,IAAI;cAACC,WAAW,EAAC;YAAY;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/E;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAENxE,OAAA;UAAK2E,KAAK,EAAC,IAAI;UAACC,MAAM,EAAC,IAAI;UAACC,OAAO,EAAC,WAAW;UAACC,IAAI,EAAC,cAAc;UAAAV,QAAA,eACjEpE,OAAA;YAAQ+E,EAAE,EAAC,IAAI;YAACC,EAAE,EAAC,IAAI;YAACC,CAAC,EAAC;UAAG;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CACN,EACAnE,YAAY,GAAG,eAAe,GAAG,iBAAiB;MAAA;QAAAgE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,GACP7D,QAAQ,gBACVX,OAAA;QAAKmE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCpE,OAAA;UACEmE,SAAS,EAAE,wBAAwB9D,YAAY,GAAG,YAAY,GAAG,EAAE,EAAG;UACtEoE,OAAO,EAAEhB,eAAgB;UACzBiB,QAAQ,EAAErE,YAAa;UAAA+D,QAAA,gBAEvBpE,OAAA;YAAK2E,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAV,QAAA,eACjEpE,OAAA;cAASsF,MAAM,EAAC;YAAgB;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,EACLnE,YAAY,GAAG,eAAe,GAAG,QAAQ;QAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACTxE,OAAA;UACEmE,SAAS,EAAC,oBAAoB;UAC9BM,OAAO,EAAE7B,aAAc;UACvB8B,QAAQ,EAAErE,YAAa;UAAA+D,QAAA,gBAEvBpE,OAAA;YAAK2E,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAV,QAAA,eACjEpE,OAAA;cAAMuF,CAAC,EAAC,GAAG;cAACC,CAAC,EAAC,GAAG;cAACb,KAAK,EAAC,IAAI;cAACC,MAAM,EAAC,IAAI;cAACa,EAAE,EAAC;YAAG;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,kBAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,gBAENxE,OAAA;QAAKmE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCpE,OAAA;UACEmE,SAAS,EAAC,qBAAqB;UAC/BM,OAAO,EAAElB,cAAe;UACxBmB,QAAQ,EAAErE,YAAa;UAAA+D,QAAA,gBAEvBpE,OAAA;YAAK2E,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAV,QAAA,gBACjEpE,OAAA;cAAMuF,CAAC,EAAC,GAAG;cAACC,CAAC,EAAC,GAAG;cAACb,KAAK,EAAC,GAAG;cAACC,MAAM,EAAC;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC,eACzCxE,OAAA;cAAMuF,CAAC,EAAC,IAAI;cAACC,CAAC,EAAC,GAAG;cAACb,KAAK,EAAC,GAAG;cAACC,MAAM,EAAC;YAAI;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvC,CAAC,gBAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxE,OAAA;UACEmE,SAAS,EAAC,oBAAoB;UAC9BM,OAAO,EAAE7B,aAAc;UACvB8B,QAAQ,EAAErE,YAAa;UAAA+D,QAAA,gBAEvBpE,OAAA;YAAK2E,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAAV,QAAA,eACjEpE,OAAA;cAAMuF,CAAC,EAAC,GAAG;cAACC,CAAC,EAAC,GAAG;cAACb,KAAK,EAAC,IAAI;cAACC,MAAM,EAAC,IAAI;cAACa,EAAE,EAAC;YAAG;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC,kBAER;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxE,OAAA;MAAGmE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC1B,CAAC7D,WAAW,IAAI,CAACF,YAAY,IAAI,yFAAyF,EAC1HE,WAAW,IAAI,CAACF,YAAY,IAAI,kFAAkF,EAClHA,YAAY,IAAI,sCAAsC;IAAA;MAAAgE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAClE,EAAA,CA/OIL,aAA2C;AAAAyF,EAAA,GAA3CzF,aAA2C;AAiPjD,eAAeA,aAAa;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}