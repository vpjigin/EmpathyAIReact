{"ast":null,"code":"var _jsxFileName = \"/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { WebSocketService } from '../services/webSocketService';\nimport './AudioRecorder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = ({\n  onRecordingComplete,\n  onProcessingComplete,\n  isProcessing,\n  conversationUuid,\n  onStartNewConversation,\n  onEndConversation,\n  onWebSocketMessage,\n  onWebSocketError\n}) => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const streamRef = useRef(null);\n  const timerRef = useRef(null);\n  const webSocketRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const processorRef = useRef(null);\n  const initializeAudioContext = useCallback(async () => {\n    try {\n      if (!streamRef.current) {\n        streamRef.current = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true,\n            sampleRate: 16000\n          }\n        });\n      }\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)({\n        sampleRate: 16000\n      });\n      const source = audioContextRef.current.createMediaStreamSource(streamRef.current);\n      processorRef.current = audioContextRef.current.createScriptProcessor(4096, 1, 1);\n      processorRef.current.onaudioprocess = event => {\n        if (webSocketRef.current && webSocketRef.current.isConnected()) {\n          const inputData = event.inputBuffer.getChannelData(0);\n\n          // Convert float32 to 16-bit PCM\n          const pcmData = new Int16Array(inputData.length);\n          for (let i = 0; i < inputData.length; i++) {\n            const sample = Math.max(-1, Math.min(1, inputData[i]));\n            pcmData[i] = sample < 0 ? sample * 0x8000 : sample * 0x7FFF;\n          }\n          webSocketRef.current.sendAudioData(pcmData.buffer);\n        }\n      };\n      source.connect(processorRef.current);\n      processorRef.current.connect(audioContextRef.current.destination);\n      console.log('Audio context initialized successfully');\n    } catch (error) {\n      console.error('Error initializing audio context:', error);\n      throw error;\n    }\n  }, []);\n  const startRecording = useCallback(async () => {\n    try {\n      console.log('Starting recording...');\n\n      // Start new conversation if not already started\n      let uuid = conversationUuid;\n      if (!uuid) {\n        uuid = onStartNewConversation();\n      }\n\n      // Initialize WebSocket connection\n      webSocketRef.current = new WebSocketService(onWebSocketMessage, onWebSocketError);\n      await webSocketRef.current.connect(uuid);\n\n      // Initialize audio streaming\n      await initializeAudioContext();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      console.log('Recording started successfully');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      onWebSocketError('Unable to start recording. Please check your microphone permissions and server connection.');\n    }\n  }, [conversationUuid, onStartNewConversation, onWebSocketMessage, onWebSocketError, initializeAudioContext]);\n  const stopRecording = useCallback(() => {\n    console.log('Stopping recording...');\n\n    // Stop audio processing\n    if (processorRef.current) {\n      processorRef.current.disconnect();\n      processorRef.current = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n\n    // Stop the media stream\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n\n    // Disconnect WebSocket\n    if (webSocketRef.current) {\n      webSocketRef.current.disconnect();\n      webSocketRef.current = null;\n    }\n    setIsRecording(false);\n\n    // Clear timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n\n    // End current conversation\n    onEndConversation();\n    console.log('Recording stopped successfully');\n  }, [onEndConversation]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (isRecording) {\n        stopRecording();\n      }\n    };\n  }, [isRecording, stopRecording]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-recorder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-status\",\n      children: isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pulse-dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Recording... \", formatTime(recordingTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-controls\",\n      children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `record-button start ${isProcessing ? 'processing' : ''}`,\n        onClick: startRecording,\n        disabled: isProcessing,\n        children: [isProcessing ? /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"2\",\n            children: [/*#__PURE__*/_jsxDEV(\"animate\", {\n              attributeName: \"r\",\n              values: \"2;4;2\",\n              dur: \"1s\",\n              repeatCount: \"indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"animate\", {\n              attributeName: \"opacity\",\n              values: \"1;0.5;1\",\n              dur: \"1s\",\n              repeatCount: \"indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: \"12\",\n            cy: \"12\",\n            r: \"8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), isProcessing ? 'Processing...' : 'Start Recording']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"record-button stop\",\n        onClick: stopRecording,\n        disabled: isProcessing,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"6\",\n            y: \"6\",\n            width: \"12\",\n            height: \"12\",\n            rx: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), \"Stop Recording\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"recording-hint\",\n      children: [!isRecording && !isProcessing && \"Press 'Start Recording' to begin streaming audio to AI. Real-time responses will appear in the conversation.\", isRecording && !isProcessing && \"Recording and streaming to AI... Click 'Stop Recording' to end the session.\", isProcessing && \"Processing your message with care...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"OU+zqKJeP1WKG51CJczTfCSobcs=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","WebSocketService","jsxDEV","_jsxDEV","AudioRecorder","onRecordingComplete","onProcessingComplete","isProcessing","conversationUuid","onStartNewConversation","onEndConversation","onWebSocketMessage","onWebSocketError","_s","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","streamRef","timerRef","webSocketRef","audioContextRef","processorRef","initializeAudioContext","current","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","createScriptProcessor","onaudioprocess","event","isConnected","inputData","inputBuffer","getChannelData","pcmData","Int16Array","length","i","sample","Math","max","min","sendAudioData","buffer","connect","destination","console","log","error","startRecording","uuid","setInterval","prev","stopRecording","disconnect","close","getTracks","forEach","track","stop","clearInterval","formatTime","seconds","mins","floor","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","width","height","viewBox","fill","cx","cy","r","attributeName","values","dur","repeatCount","x","y","rx","_c","$RefreshReg$"],"sources":["/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { WebSocketService } from '../services/webSocketService';\nimport './AudioRecorder.css';\n\ninterface AudioRecorderProps {\n  onRecordingComplete: (audioBlob: Blob) => void;\n  onProcessingComplete: () => void;\n  isProcessing: boolean;\n  conversationUuid: string | null;\n  onStartNewConversation: () => string;\n  onEndConversation: () => void;\n  onWebSocketMessage: (message: any) => void;\n  onWebSocketError: (error: string) => void;\n}\n\nconst AudioRecorder: React.FC<AudioRecorderProps> = ({ \n  onRecordingComplete, \n  onProcessingComplete, \n  isProcessing, \n  conversationUuid, \n  onStartNewConversation, \n  onEndConversation,\n  onWebSocketMessage,\n  onWebSocketError\n}) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const streamRef = useRef<MediaStream | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const webSocketRef = useRef<WebSocketService | null>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const processorRef = useRef<ScriptProcessorNode | null>(null);\n\n  const initializeAudioContext = useCallback(async () => {\n    try {\n      if (!streamRef.current) {\n        streamRef.current = await navigator.mediaDevices.getUserMedia({ \n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true,\n            sampleRate: 16000\n          }\n        });\n      }\n\n      audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)({\n        sampleRate: 16000\n      });\n      \n      const source = audioContextRef.current.createMediaStreamSource(streamRef.current);\n      processorRef.current = audioContextRef.current.createScriptProcessor(4096, 1, 1);\n      \n      processorRef.current.onaudioprocess = (event) => {\n        if (webSocketRef.current && webSocketRef.current.isConnected()) {\n          const inputData = event.inputBuffer.getChannelData(0);\n          \n          // Convert float32 to 16-bit PCM\n          const pcmData = new Int16Array(inputData.length);\n          for (let i = 0; i < inputData.length; i++) {\n            const sample = Math.max(-1, Math.min(1, inputData[i]));\n            pcmData[i] = sample < 0 ? sample * 0x8000 : sample * 0x7FFF;\n          }\n          \n          webSocketRef.current.sendAudioData(pcmData.buffer);\n        }\n      };\n      \n      source.connect(processorRef.current);\n      processorRef.current.connect(audioContextRef.current.destination);\n      \n      console.log('Audio context initialized successfully');\n    } catch (error) {\n      console.error('Error initializing audio context:', error);\n      throw error;\n    }\n  }, []);\n\n  const startRecording = useCallback(async () => {\n    try {\n      console.log('Starting recording...');\n      \n      // Start new conversation if not already started\n      let uuid = conversationUuid;\n      if (!uuid) {\n        uuid = onStartNewConversation();\n      }\n      \n      // Initialize WebSocket connection\n      webSocketRef.current = new WebSocketService(onWebSocketMessage, onWebSocketError);\n      await webSocketRef.current.connect(uuid);\n      \n      // Initialize audio streaming\n      await initializeAudioContext();\n      \n      setIsRecording(true);\n      setRecordingTime(0);\n      \n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      \n      console.log('Recording started successfully');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      onWebSocketError('Unable to start recording. Please check your microphone permissions and server connection.');\n    }\n  }, [conversationUuid, onStartNewConversation, onWebSocketMessage, onWebSocketError, initializeAudioContext]);\n\n  const stopRecording = useCallback(() => {\n    console.log('Stopping recording...');\n    \n    // Stop audio processing\n    if (processorRef.current) {\n      processorRef.current.disconnect();\n      processorRef.current = null;\n    }\n    \n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    \n    // Stop the media stream\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    \n    // Disconnect WebSocket\n    if (webSocketRef.current) {\n      webSocketRef.current.disconnect();\n      webSocketRef.current = null;\n    }\n    \n    setIsRecording(false);\n    \n    // Clear timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n    \n    // End current conversation\n    onEndConversation();\n    \n    console.log('Recording stopped successfully');\n  }, [onEndConversation]);\n\n  // Cleanup on component unmount\n  useEffect(() => {\n    return () => {\n      if (isRecording) {\n        stopRecording();\n      }\n    };\n  }, [isRecording, stopRecording]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <div className=\"recording-status\">\n        {isRecording && (\n          <div className=\"recording-indicator\">\n            <div className=\"pulse-dot\"></div>\n            <span>Recording... {formatTime(recordingTime)}</span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"recording-controls\">\n        {!isRecording ? (\n          <button \n            className={`record-button start ${isProcessing ? 'processing' : ''}`}\n            onClick={startRecording}\n            disabled={isProcessing}\n          >\n            {isProcessing ? (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"2\">\n                  <animate attributeName=\"r\" values=\"2;4;2\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                  <animate attributeName=\"opacity\" values=\"1;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </circle>\n              </svg>\n            ) : (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"8\"/>\n              </svg>\n            )}\n            {isProcessing ? 'Processing...' : 'Start Recording'}\n          </button>\n        ) : (\n          <button \n            className=\"record-button stop\"\n            onClick={stopRecording}\n            disabled={isProcessing}\n          >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n            </svg>\n            Stop Recording\n          </button>\n        )}\n      </div>\n      \n      <p className=\"recording-hint\">\n        {!isRecording && !isProcessing && \"Press 'Start Recording' to begin streaming audio to AI. Real-time responses will appear in the conversation.\"}\n        {isRecording && !isProcessing && \"Recording and streaming to AI... Click 'Stop Recording' to end the session.\"}\n        {isProcessing && \"Processing your message with care...\"}\n      </p>\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}