{"ast":null,"code":"import React,{useState,useRef,useCallback,useEffect}from'react';import{WebSocketService}from'../services/webSocketService';import'./AudioRecorder.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AudioRecorder=_ref=>{let{onRecordingComplete,onProcessingComplete,isProcessing,conversationUuid,onStartNewConversation,onEndConversation,onWebSocketMessage,onWebSocketError}=_ref;const[isRecording,setIsRecording]=useState(false);const[recordingTime,setRecordingTime]=useState(0);const streamRef=useRef(null);const timerRef=useRef(null);const webSocketRef=useRef(null);const audioContextRef=useRef(null);const processorRef=useRef(null);const initializeAudioContext=useCallback(async()=>{try{if(!streamRef.current){streamRef.current=await navigator.mediaDevices.getUserMedia({audio:{echoCancellation:true,noiseSuppression:true,autoGainControl:true,sampleRate:16000}});}audioContextRef.current=new(window.AudioContext||window.webkitAudioContext)({sampleRate:16000});const source=audioContextRef.current.createMediaStreamSource(streamRef.current);processorRef.current=audioContextRef.current.createScriptProcessor(4096,1,1);processorRef.current.onaudioprocess=event=>{if(webSocketRef.current&&webSocketRef.current.isConnected()){const inputData=event.inputBuffer.getChannelData(0);// Convert float32 to 16-bit PCM\nconst pcmData=new Int16Array(inputData.length);for(let i=0;i<inputData.length;i++){const sample=Math.max(-1,Math.min(1,inputData[i]));pcmData[i]=sample<0?sample*0x8000:sample*0x7FFF;}webSocketRef.current.sendAudioData(pcmData.buffer);}};source.connect(processorRef.current);processorRef.current.connect(audioContextRef.current.destination);console.log('Audio context initialized successfully');}catch(error){console.error('Error initializing audio context:',error);throw error;}},[]);const startRecording=useCallback(async()=>{try{console.log('Starting recording...');// Start new conversation if not already started\nlet uuid=conversationUuid;if(!uuid){uuid=onStartNewConversation();}console.log('Attempting to connect to WebSocket at: ws://localhost:8080/ws/audio-stream-native');// Initialize WebSocket connection\nwebSocketRef.current=new WebSocketService(onWebSocketMessage,onWebSocketError);try{await webSocketRef.current.connect(uuid);console.log('WebSocket connection successful');}catch(wsError){console.error('WebSocket connection failed:',wsError);throw new Error(`WebSocket connection failed: ${wsError}`);}// Initialize audio streaming\nconsole.log('Initializing audio context...');try{await initializeAudioContext();console.log('Audio context initialization successful');}catch(audioError){console.error('Audio initialization failed:',audioError);throw new Error(`Audio initialization failed: ${audioError}`);}setIsRecording(true);setRecordingTime(0);timerRef.current=setInterval(()=>{setRecordingTime(prev=>prev+1);},1000);console.log('Recording started successfully');}catch(error){console.error('Error starting recording:',error);onWebSocketError(`Unable to start recording: ${error}`);}},[conversationUuid,onStartNewConversation,onWebSocketMessage,onWebSocketError,initializeAudioContext]);const stopRecording=useCallback(()=>{console.log('Stopping recording...');// Stop audio processing\nif(processorRef.current){processorRef.current.disconnect();processorRef.current=null;}if(audioContextRef.current){audioContextRef.current.close();audioContextRef.current=null;}// Stop the media stream\nif(streamRef.current){streamRef.current.getTracks().forEach(track=>track.stop());streamRef.current=null;}// Disconnect WebSocket\nif(webSocketRef.current){webSocketRef.current.disconnect();webSocketRef.current=null;}setIsRecording(false);// Clear timer\nif(timerRef.current){clearInterval(timerRef.current);timerRef.current=null;}// End current conversation\nonEndConversation();console.log('Recording stopped successfully');},[onEndConversation]);// Cleanup on component unmount only\nuseEffect(()=>{return()=>{// Clean up WebSocket and audio resources on unmount\nif(webSocketRef.current){webSocketRef.current.disconnect();}if(audioContextRef.current){audioContextRef.current.close();}if(streamRef.current){streamRef.current.getTracks().forEach(track=>track.stop());}if(timerRef.current){clearInterval(timerRef.current);}};},[]);// Empty dependency array - only runs on unmount\nconst formatTime=seconds=>{const mins=Math.floor(seconds/60);const secs=seconds%60;return`${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`;};return/*#__PURE__*/_jsxs(\"div\",{className:\"audio-recorder\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recording-status\",children:isRecording&&/*#__PURE__*/_jsxs(\"div\",{className:\"recording-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"pulse-dot\"}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Recording... \",formatTime(recordingTime)]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"recording-controls\",children:!isRecording?/*#__PURE__*/_jsxs(\"button\",{className:`record-button start ${isProcessing?'processing':''}`,onClick:startRecording,disabled:isProcessing,children:[isProcessing?/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsxs(\"circle\",{cx:\"12\",cy:\"12\",r:\"2\",children:[/*#__PURE__*/_jsx(\"animate\",{attributeName:\"r\",values:\"2;4;2\",dur:\"1s\",repeatCount:\"indefinite\"}),/*#__PURE__*/_jsx(\"animate\",{attributeName:\"opacity\",values:\"1;0.5;1\",dur:\"1s\",repeatCount:\"indefinite\"})]})}):/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"circle\",{cx:\"12\",cy:\"12\",r:\"8\"})}),isProcessing?'Processing...':'Start Recording']}):/*#__PURE__*/_jsxs(\"button\",{className:\"record-button stop\",onClick:stopRecording,disabled:isProcessing,children:[/*#__PURE__*/_jsx(\"svg\",{width:\"24\",height:\"24\",viewBox:\"0 0 24 24\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"rect\",{x:\"6\",y:\"6\",width:\"12\",height:\"12\",rx:\"2\"})}),\"Stop Recording\"]})}),/*#__PURE__*/_jsxs(\"p\",{className:\"recording-hint\",children:[!isRecording&&!isProcessing&&\"Press 'Start Recording' to begin streaming audio to AI. Real-time responses will appear in the conversation.\",isRecording&&!isProcessing&&\"Recording and streaming to AI... Click 'Stop Recording' to end the session.\",isProcessing&&\"Processing your message with care...\"]})]});};export default AudioRecorder;","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","WebSocketService","jsx","_jsx","jsxs","_jsxs","AudioRecorder","_ref","onRecordingComplete","onProcessingComplete","isProcessing","conversationUuid","onStartNewConversation","onEndConversation","onWebSocketMessage","onWebSocketError","isRecording","setIsRecording","recordingTime","setRecordingTime","streamRef","timerRef","webSocketRef","audioContextRef","processorRef","initializeAudioContext","current","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","window","AudioContext","webkitAudioContext","source","createMediaStreamSource","createScriptProcessor","onaudioprocess","event","isConnected","inputData","inputBuffer","getChannelData","pcmData","Int16Array","length","i","sample","Math","max","min","sendAudioData","buffer","connect","destination","console","log","error","startRecording","uuid","wsError","Error","audioError","setInterval","prev","stopRecording","disconnect","close","getTracks","forEach","track","stop","clearInterval","formatTime","seconds","mins","floor","secs","toString","padStart","className","children","onClick","disabled","width","height","viewBox","fill","cx","cy","r","attributeName","values","dur","repeatCount","x","y","rx"],"sources":["/Users/jiginvp/react/AICompetition/empathy-ai/src/components/AudioRecorder.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { WebSocketService } from '../services/webSocketService';\nimport './AudioRecorder.css';\n\ninterface AudioRecorderProps {\n  onRecordingComplete: (audioBlob: Blob) => void;\n  onProcessingComplete: () => void;\n  isProcessing: boolean;\n  conversationUuid: string | null;\n  onStartNewConversation: () => string;\n  onEndConversation: () => void;\n  onWebSocketMessage: (message: any) => void;\n  onWebSocketError: (error: string) => void;\n}\n\nconst AudioRecorder: React.FC<AudioRecorderProps> = ({ \n  onRecordingComplete, \n  onProcessingComplete, \n  isProcessing, \n  conversationUuid, \n  onStartNewConversation, \n  onEndConversation,\n  onWebSocketMessage,\n  onWebSocketError\n}) => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const streamRef = useRef<MediaStream | null>(null);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n  const webSocketRef = useRef<WebSocketService | null>(null);\n  const audioContextRef = useRef<AudioContext | null>(null);\n  const processorRef = useRef<ScriptProcessorNode | null>(null);\n\n  const initializeAudioContext = useCallback(async () => {\n    try {\n      if (!streamRef.current) {\n        streamRef.current = await navigator.mediaDevices.getUserMedia({ \n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true,\n            sampleRate: 16000\n          }\n        });\n      }\n\n      audioContextRef.current = new (window.AudioContext || (window as any).webkitAudioContext)({\n        sampleRate: 16000\n      });\n      \n      const source = audioContextRef.current.createMediaStreamSource(streamRef.current);\n      processorRef.current = audioContextRef.current.createScriptProcessor(4096, 1, 1);\n      \n      processorRef.current.onaudioprocess = (event) => {\n        if (webSocketRef.current && webSocketRef.current.isConnected()) {\n          const inputData = event.inputBuffer.getChannelData(0);\n          \n          // Convert float32 to 16-bit PCM\n          const pcmData = new Int16Array(inputData.length);\n          for (let i = 0; i < inputData.length; i++) {\n            const sample = Math.max(-1, Math.min(1, inputData[i]));\n            pcmData[i] = sample < 0 ? sample * 0x8000 : sample * 0x7FFF;\n          }\n          \n          webSocketRef.current.sendAudioData(pcmData.buffer);\n        }\n      };\n      \n      source.connect(processorRef.current);\n      processorRef.current.connect(audioContextRef.current.destination);\n      \n      console.log('Audio context initialized successfully');\n    } catch (error) {\n      console.error('Error initializing audio context:', error);\n      throw error;\n    }\n  }, []);\n\n  const startRecording = useCallback(async () => {\n    try {\n      console.log('Starting recording...');\n      \n      // Start new conversation if not already started\n      let uuid = conversationUuid;\n      if (!uuid) {\n        uuid = onStartNewConversation();\n      }\n      \n      console.log('Attempting to connect to WebSocket at: ws://localhost:8080/ws/audio-stream-native');\n      \n      // Initialize WebSocket connection\n      webSocketRef.current = new WebSocketService(onWebSocketMessage, onWebSocketError);\n      try {\n        await webSocketRef.current.connect(uuid);\n        console.log('WebSocket connection successful');\n      } catch (wsError) {\n        console.error('WebSocket connection failed:', wsError);\n        throw new Error(`WebSocket connection failed: ${wsError}`);\n      }\n      \n      // Initialize audio streaming\n      console.log('Initializing audio context...');\n      try {\n        await initializeAudioContext();\n        console.log('Audio context initialization successful');\n      } catch (audioError) {\n        console.error('Audio initialization failed:', audioError);\n        throw new Error(`Audio initialization failed: ${audioError}`);\n      }\n      \n      setIsRecording(true);\n      setRecordingTime(0);\n      \n      timerRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n      \n      console.log('Recording started successfully');\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      onWebSocketError(`Unable to start recording: ${error}`);\n    }\n  }, [conversationUuid, onStartNewConversation, onWebSocketMessage, onWebSocketError, initializeAudioContext]);\n\n  const stopRecording = useCallback(() => {\n    console.log('Stopping recording...');\n    \n    // Stop audio processing\n    if (processorRef.current) {\n      processorRef.current.disconnect();\n      processorRef.current = null;\n    }\n    \n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n      audioContextRef.current = null;\n    }\n    \n    // Stop the media stream\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    \n    // Disconnect WebSocket\n    if (webSocketRef.current) {\n      webSocketRef.current.disconnect();\n      webSocketRef.current = null;\n    }\n    \n    setIsRecording(false);\n    \n    // Clear timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n      timerRef.current = null;\n    }\n    \n    // End current conversation\n    onEndConversation();\n    \n    console.log('Recording stopped successfully');\n  }, [onEndConversation]);\n\n  // Cleanup on component unmount only\n  useEffect(() => {\n    return () => {\n      // Clean up WebSocket and audio resources on unmount\n      if (webSocketRef.current) {\n        webSocketRef.current.disconnect();\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n      if (streamRef.current) {\n        streamRef.current.getTracks().forEach(track => track.stop());\n      }\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []); // Empty dependency array - only runs on unmount\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div className=\"audio-recorder\">\n      <div className=\"recording-status\">\n        {isRecording && (\n          <div className=\"recording-indicator\">\n            <div className=\"pulse-dot\"></div>\n            <span>Recording... {formatTime(recordingTime)}</span>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"recording-controls\">\n        {!isRecording ? (\n          <button \n            className={`record-button start ${isProcessing ? 'processing' : ''}`}\n            onClick={startRecording}\n            disabled={isProcessing}\n          >\n            {isProcessing ? (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"2\">\n                  <animate attributeName=\"r\" values=\"2;4;2\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                  <animate attributeName=\"opacity\" values=\"1;0.5;1\" dur=\"1s\" repeatCount=\"indefinite\"/>\n                </circle>\n              </svg>\n            ) : (\n              <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                <circle cx=\"12\" cy=\"12\" r=\"8\"/>\n              </svg>\n            )}\n            {isProcessing ? 'Processing...' : 'Start Recording'}\n          </button>\n        ) : (\n          <button \n            className=\"record-button stop\"\n            onClick={stopRecording}\n            disabled={isProcessing}\n          >\n            <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <rect x=\"6\" y=\"6\" width=\"12\" height=\"12\" rx=\"2\"/>\n            </svg>\n            Stop Recording\n          </button>\n        )}\n      </div>\n      \n      <p className=\"recording-hint\">\n        {!isRecording && !isProcessing && \"Press 'Start Recording' to begin streaming audio to AI. Real-time responses will appear in the conversation.\"}\n        {isRecording && !isProcessing && \"Recording and streaming to AI... Click 'Stop Recording' to end the session.\"}\n        {isProcessing && \"Processing your message with care...\"}\n      </p>\n    </div>\n  );\n};\n\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}